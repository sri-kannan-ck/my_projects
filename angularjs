RUNNING NOTES ON ANGULAR.JS

It is a java script framework for interactive HTML.

What needs to be known to study angular?
HTML, CSS, JS.

And it is easy to test Angular.

When Angular JS has to used?
1. When you need to create a dynamic website.
2. When you need to organize your JS
3. When you need to create a fast responsive website.
4. Angular plays well with jQuery.

Since Angular is JS you have to know when to call the JS in HTML.
It is done by DIRECTIVES.

Directive:
It is a marker on HTML that tells Angular to run or reference JS code.

Example:
ng-controller is a directive that calls the JS function.

<body ng-controller="StoreController">
</body>

JS:
funcion StoreController() {
alert("hi");
}

It looks like everything is a module in Angular.

How to create a module in Angular?
var app = angular.module('store', []);
This is the format of creating the module in Angular. The "store" is the module name and the [] is the dependencies list.

Another Directive:
ng-app : It runs the JS function specified to it whenver the document/HTML loads.

Expressions:
They are dynamic values calculated in the runtime
Example:
<p>{{4 + 3}}</p>

This will be returned back as {{4+3}} in HTML page if no angular is included.

what if the angular is included:
The output will be 7

Example:
app.js:
var app;
app = angular.module("gemStore", []);

index.html:
<!DOCTYPE html>
<html ng-app="gemStore">
  <head>
    <link rel="stylesheet" type="text/css" href="bootstrap.min.css" />
    <script type="text/javascript" src="angular.min.js"></script>
    <script type="text/javascript" src="app.js"></script>
  </head>
  <body>
    <h1>{{4+3}}</h1>
  </body>
</html>

output: 7


Wherever we go, you can see Dictionary kind of data types. I don't know why !! 
Here python - dictionary kind of key , value representation are done for app's behaviour using controller.

Example;
var info = {
name: 'Yagamiram ElricTK',
Age: 'Immortal',
Description: 'He is the mix of Light Yagami and Alphonso Elric. So he is student with a Death note book and also a full metal alchemist'
}

This key value stored in the JS object has to to accessed by someway.

Below is the way :
1. Create a closure. Format is: (funtion () { })();
2. Creata a module and call it as app.
3. Create a controller that uses the behaviour/info/key,value of the app.
3. Inside the controller assign the behviour of the app as a property.

(function () {
var app = angular.module('Person', []);
app.controller('PersonController', funtion () {
  this.property = info;
});
var info={
name: 'Y E TK',
Age: :"I",
Description: "..."
}
})();

That's it!

Now as usual call this inside a div block in HTML using ng-controller directive.

<div ng-controller="PersonController">
<p>{{PersonController.property.name}}</p>
<p>{{PersonController.property.Age}}</p>
<p>{{PersonController.property.Desc}}</p>
</div>

More on Directives:
ng-show : This will show only when the boolean value to which it is mapped is set to True.
ng-repeat: For loop that iterates the array/list
ng-hide : Hide the HTML property when the boolean is either set to True or False.
Format: <div ng-repeat = "each_product in products"> </div>

What we have learned so far:
1. Directives : HTML annotations that trigger JS behaviours
2. Modules: Where our application components resides
3. Controllers: Where we add application behaviour
4. Expressions: How values get displayed within the page.

Example:

<!DOCTYPE html>
<html ng-app="gemStore">
  <head>
    <link rel="stylesheet" type="text/css" href="bootstrap.min.css" />
    <script type="text/javascript" src="angular.min.js"></script>
    <script type="text/javascript" src="app.js"></script>
  </head>
  <body class="container" ng-controller="StoreController as store">
    <div class="product row" ng-hide="!store.product.soldOut">
      <h3>
        {{store.product.name}}
        <em class="pull-right">${{store.product.price}}</em>
      </h3>
      <button ng-show="store.product.canPurchase">Add to Cart</button>
    </div>
  </body>
</html>
