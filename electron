Electron - It is created by Github. It is used for creating desktop applications. It can make sure the application can be run 
in any operating system [cross-platform].

It uses Node.js and Chrome to create the desktop application. 

How it helps to build a cross-platform desktop applications?
It will make sure that yout application must be run only by node.js and chrome engine. So the application that you create will 
bundle the node.js and chrome engine togther. Now this applicaton [your code + node.js + chrome engine] will be given to any customer
who uses any operating system and the application will run on their system irrespective how the system is configured.

Source: Watch the video: https://www.youtube.com/watch?v=Xs3Oc4weZbw

Pros and Cons of Electron:

Pros:
HTML + CSS + JS
Node.js + chrome engine
No deplpoyment dependencies [this explained above]

Cons:
HTML + CSS + JS [Definitely it's a disadvantage for me. I dont have any serious knowledge in HTML or CSS or JS when I'm writing this]
Seriously JS
Native module are in C/C++

History for Electron:
Created by Github for  Atom [Atom is an editor. It is an application of node.js]

Important features of Eletron:
1. Rapid development
2. Themes [I don't know ! Are they talking about the background themes]
3. Shared code/ UI [you can easily cut-copy-paste some code from your earlier application to the new application]
4. Deplyment + "silent" updates [Deployment is easier. YEs! so only it is called as cross-platform development tool]
5. Native UX [IDK]

Generally, an Electron app is structured like this:

your-app/
├── package.json
├── main.js
└── index.html

How to install:

1. Dependecies: node.js or io.js

Commands:
sudo -s
sudo apt-get install npm
npm init
    name: (yagamiram) 
    version: (0.0.0) 
    description: For Jibo robotics project
    entry point: (index.js) 
    test command: 
    git repository: https://github.com/yagamiram
    keywords: electron, coffeescript, whitestorm, react, io, three
    author: Yagamiram ElricTK
    license: (BSD-2-Clause) 
npm i electron-prebuilt --save-dev [this didnt work for me for some reason in Ubuntu]
Error I got:
    > electron-prebuilt@0.36.10 postinstall /home/yagamiram/node_modules/electron-prebuilt
    > node install.js
    
    sh: 1: node: not found
    npm WARN This failure might be due to the use of legacy binary "node"
    npm WARN For further explanations, please read
    /usr/share/doc/nodejs/README.Debian
     
    npm ERR! weird error 127
    npm ERR! not ok code 0
How to avoid this error?
Source : https://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu/21171188#21171188

sudo apt-get install nodejs-legacy

That's it! [Electron is installed]

Now go to the text editor and edit the package.json file:
{
  "name": "electron_apps",
  "version": "0.0.0",
  "description": "To create desktop apps on Electron",
  "main": "index.js",
  "scripts": {
    "start": "electron ."  //This is the only change you have to do. Add this line.
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yagamiram"
  },
  "author": "Yagamiram Elric TK",
  "license": "BSD-2-Clause",
  "devDependencies": {
    "electron-prebuilt": "~0.36.10"
  }
}
